"use strict";(self.webpackChunknuchain_wiki_2=self.webpackChunknuchain_wiki_2||[]).push([[166],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9979:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i={id:"docker",title:"Using Docker",sidebar_label:"Docker"},c=void 0,u={unversionedId:"learn/docker",id:"learn/docker",isDocsHomePage:!1,title:"Using Docker",description:"The fastest way to run Nuchain nodes apart from using prebuilt binaries is to use Docker. Here are",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/learn/docker.md",sourceDirName:"learn",slug:"/learn/docker",permalink:"/docs/learn/docker",editUrl:"https://github.com/nusantarachain/wiki/edit/master/docs/learn/docker.md",tags:[],version:"current",frontMatter:{id:"docker",title:"Using Docker",sidebar_label:"Docker"},sidebar:"tutorialSidebar",previous:{title:"Become Validator",permalink:"/docs/learn/become-validator"},next:{title:"Nominator",permalink:"/docs/learn/nominator"}},s=[],l={toc:s};function p(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The fastest way to run Nuchain nodes apart from using prebuilt binaries is to use Docker. Here are\nsteps to run Nuchain Node using Docker."),(0,o.kt)("p",null,"Pull the latest Nuchain docker image:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker pull anvie/nuchain:latest\n")),(0,o.kt)("p",null,"Run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker run --rm \\\n  -v '/var/data/nuchain:/data' \\\n  -p '9933:9933' \\\n  -p '9944:9944' \\\n  -p '30333:30333' \\\n   --name nuchain anvie/nuchain:latest \\\n   nuchain --base-path=/data\\\n   --ws-externals \\\n   --rpc-externals \\\n   --rpc-methods=Unsafe\n")),(0,o.kt)("p",null,"If you want to run a docker container as a service, you can use the following systemd configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Systemd service configuration for Nuchain docker container.\n# edit as you wish.\n\n[Units]\nDescription=Nuchain Node Container\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nStartLimitBurst=5\nLimitNOFILE=10000\nExecStartPre=-/usr/bin/docker stop nuchain\nExecStartPre=-/usr/bin/docker rm nuchain\nExecStart=/usr/bin/docker run --rm -v '/var/data:/data' -p '9933:9933' -p '9944:9944' -p '30333:30333' --name nuchain anvie/ nuchain:latest nuchain --validator --base-path=/data --ws-external --rpc-external --rpc-methods=Unsafe\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Save the above configuration to the file ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/nuchain.service")," and type:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ systemctl systemctl daemon-reload\n$ systemctl enable nuchain\n$ systemctl start nuchain\n")))}p.isMDXComponent=!0}}]);